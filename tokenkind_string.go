// Code generated by "stringer -type=TokenKind"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[LEFT_PAREN-1]
	_ = x[RIGHT_PAREN-2]
	_ = x[LEFT_BRACE-3]
	_ = x[RIGHT_BRACE-4]
	_ = x[LEFT_BRACKET-5]
	_ = x[RIGHT_BRACKET-6]
	_ = x[COLON-7]
	_ = x[COMMA-8]
	_ = x[DOT-9]
	_ = x[SEMICOLON-10]
	_ = x[SHARP-11]
	_ = x[IDENT-12]
	_ = x[OPERATOR-13]
	_ = x[INTEGER-14]
	_ = x[STRING-15]
	_ = x[ARROW-16]
	_ = x[CASE-17]
	_ = x[DEF-18]
	_ = x[EQUAL-19]
	_ = x[FN-20]
	_ = x[INFIX-21]
	_ = x[INFIXL-22]
	_ = x[INFIXR-23]
	_ = x[LET-24]
	_ = x[TYPE-25]
}

const _TokenKind_name = "EOFLEFT_PARENRIGHT_PARENLEFT_BRACERIGHT_BRACELEFT_BRACKETRIGHT_BRACKETCOLONCOMMADOTSEMICOLONSHARPIDENTOPERATORINTEGERSTRINGARROWCASEDEFEQUALFNINFIXINFIXLINFIXRLETTYPE"

var _TokenKind_index = [...]uint8{0, 3, 13, 24, 34, 45, 57, 70, 75, 80, 83, 92, 97, 102, 110, 117, 123, 128, 132, 135, 140, 142, 147, 153, 159, 162, 166}

func (i TokenKind) String() string {
	if i < 0 || i >= TokenKind(len(_TokenKind_index)-1) {
		return "TokenKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenKind_name[_TokenKind_index[i]:_TokenKind_index[i+1]]
}
