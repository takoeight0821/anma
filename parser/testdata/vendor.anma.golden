(type (call (var Option) (var c)) (call (var None)) (call (var Some) (var c)))
(type (call (var List) (var d)) (call (var Nil)) (call (var Cons) (var d) (call (var List) (var d))))
(def vendor (codata (clause (access (call # (var items)) get) (call (var None))) (clause (access (access (call # (call (var Nil))) put) get) (prim print (literal "Nil case")) (prim print (call (var Nil))) (call (var None))) (clause (access (access (call # (call (var Cons) (var x) (var xs))) put) get) (prim print (literal "Cons case")) (prim print (call (var Cons) (var x) (var xs))) (call (var Some) (var x))) (clause (access (access (call # (var items)) put) put) (access (call (var vendor) (var items)) put))))
(def main (codata (clause (call #) (prim print (access (access (call (var vendor) (call (var Cons) (literal 0) (call (var Nil)))) put) get)))))
