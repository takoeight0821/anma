(def + (codata (clause (call # (var x) (var y)) (prim add (var x) (var y)))))
(def zipWith (codata (clause (access (call # (var f) (var xs) (var ys)) head) (call (var f) (access (var xs) head) (access (var ys) head))) (clause (access (call # (var f) (var xs) (var ys)) tail) (call (var zipWith) (var f) (access (var xs) tail) (access (var ys) tail)))))
(def fib (codata (clause (access # head) (literal 1)) (clause (access (access # tail) head) (literal 1)) (clause (access (access # tail) tail) (call (var zipWith) (codata (clause (call # (var x) (var y)) (binary (var x) + (var y)))) (var fib) (access (var fib) tail)))))
(def main (codata (clause (call #) (prim print (access (access (access (access (var fib) tail) tail) tail) head)))))
