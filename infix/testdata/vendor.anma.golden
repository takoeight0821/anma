(type (call (var Option) (var c)) (call (var None)) (call (var Some) (var c)))
(type (call (var List) (var d)) (call (var Nil)) (call (var Cons) (var d) (call (var List) (var d))))
(def vendor (lambda (x0) (object (field get (case ((var x0)) (clause (var items) (call (var None))))) (field put (object (field get (case ((var x0)) (clause (call (var Nil)) (prim print (literal "Nil case")) (prim print (call (var Nil))) (call (var None))) (clause (call (var Cons) (var x) (var xs)) (prim print (literal "Cons case")) (prim print (call (var Cons) (var x) (var xs))) (call (var Some) (var x))))) (field put (case ((var x0)) (clause (var items) (access (call (var vendor) (var items)) put)))))))))
(def main (lambda () (prim print (access (access (call (var vendor) (call (var Cons) (literal 0) (call (var Nil)))) put) get))))
